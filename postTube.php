<?php
/*
Plugin Name: Post Tube Player
Plugin URI: http://www.alakhnor.com/post-thumb
Description: Media player for wordTube & Post-Thumb.
Version: 1.1
Author:  Alakhnor
Author URI: http://www.alakhnor.com/post-thumb

	Copyright (c) 2007 Alakhnor (http://www.alakhnor.com/post-thumb) for PostTube
	PostTube is released under the GNU General Public License (GPL)
	http://www.gnu.org/licenses/gpl.txt

	This is a WordPress 2 plugin (http://wordpress.org).
        Highslide JS is licensed under a Creative Commons Attribution-NonCommercial 2.5 License: http://creativecommons.org/licenses/by-nc/2.5/
*/
define('PTP_VERSION', '1.1');
define('PTP_ABSPATH', ABSPATH.'wp-content/plugins/' . dirname(plugin_basename(__FILE__)) .'/');
define('PTP_URLPATH', get_settings('siteurl').'/wp-content/plugins/' . dirname(plugin_basename(__FILE__)) .'/');
define('PTP_THUMB', PTP_URLPATH.'images/multimedia.png');

if (function_exists('ptp_header')) add_action('wp_head', 'ptp_header');

function ptp_header() {

	$LastM = get_LastMedia();
	$LastM = $LastM[0];
	$file = pathinfo($LastM->file);$ext = strtolower($file['extension']);
	if ($ext == 'flv' or $ext == 'mp3') {
		$icons = true; 
	} else {
		$icons = false;
		$LastM->image = $LastM->file;
	}
	?>
	<link rel="stylesheet" href="<?php echo PTP_URLPATH; ?>postTube.css" type="text/css" media="screen" />
	<script type="text/javascript">
	//<![CDATA[
		var playerpath = "<?php echo WORDTUBE_URLPATH; ?>mediaplayer.swf";
		var callbackref = "<?php echo WORDTUBE_URLPATH; ?>wordtube-statistics.php";
		var fileInit = "<?php echo $LastM->file; ?>";
		var imageInit = "<?php echo $LastM->image; ?>";
		var vidInit = "<?php echo $LastM->vid; ?>";
		var IconInit = "<?php echo $icons; ?>";
		var Titlemsg = "<?php _e('Click to play/pause', 'posttube'); ?>";
		var bystring = "<?php _e('by ', 'posttube'); ?>"
		var viewstring = "<?php _e('Viewed ', 'posttube'); ?>"
		var timestring = "<?php _e(' times', 'posttube'); ?>"
	//]]>
	</script>
	<?php

	echo '<!-- Start Of Script Generated By PostTube '.PTP_VERSION.' -->'."\n";
	wp_enqueue_script('jquery', PTP_URLPATH.'js/jquery.js', false);
	wp_enqueue_script('jqDnR', PTP_URLPATH.'js/jqDnR.js', array('jquery'));
	wp_enqueue_script('dimensions', PTP_URLPATH.'js/dimensions.js', array('jquery'));
	wp_enqueue_script('swfobject', PTP_URLPATH.'js/swfobject.js', array('jquery'));
	wp_enqueue_script('postTube', PTP_URLPATH.'js/postTube.js', array('swfobject'));
	wp_print_scripts(array('jquery', 'jqDnR', 'dimensions', 'swfobject', 'postTube'));
	echo '<!-- End Of Script Generated By PostTube -->'."\n";

}
/***************************************************************
	Get the plain player
	Displays the full player
	vwidth	: media width
	pwidth	: playlist width
	twidth	: thumbnail width
	echo	: echo or return the result
	default	: choose playlist to display first

***************************************************************/
function get_thePlayer($vwidth=560, $pwidth=322, $twidth=90, $echo=true, $default='0', $showthumb=true) {

	// Video
	$vheight = (int) 3/4*$vwidth;
	
	// Playlist
	$pheight = $vheight - 27;

	// Content
	$cwidth = $vwidth+$pwidth+25;
	$cheight = $vheight+10;

	$echostr = "\n".'<div id="ptp_player">';
	$echostr .= "\n\t".'<div id="plaincontent" style="width: '.$cwidth.'px;height: '.$cheight.'px;">';
	$echostr .= get_theMedia($vwidth, $vheight);
	$echostr .= get_thePlaylist($pwidth, $pheight, $twidth, $default, $showthumb);
	$echostr .= "\n\t".'</div>'."\n";
	$echostr .= "\n".'</div>'."\n";
	
	if ($echo)
		echo $echostr;
	else
		return $echostr;
}
/***************************************************************
	Get the player
	Returns the standalone player
	vwidth	: media width
	vheight	: media height
***************************************************************/
function get_theMedia($vwidth=560, $vheight=420) {

	?>
	<script type="text/javascript">
	//<![CDATA[
		var pwidth = "<?php echo $vwidth; ?>";
		var pheight = "<?php echo $vheight; ?>";
	//]]>
	</script>
	<?php

	$body .= "\n\t".'<div id="playerroot">';
	$body .= "\n\t\t".'<div id="placeholder"><a href="http://www.macromedia.com/go/getflashplayer">Get the Flash Player</a> to see this player.</div>';
	$body .= "\n\t".'</div>';

	return $body;
	
}
/***************************************************************
	Get the playlist
	Returns the standalone playlist
	pwidth	: playlist width
	pheight	: playlist height
	twidth	: thumbnail width
	default	: choose playlist to display first
	showthumb : display thumbnail or not
***************************************************************/
function get_thePlaylist($pwidth=322, $pheight=393, $twidth=90, $default='0', $showthumb=true) {


	// Form
	$fwidth = $pwidth-2;
	// Thumb
	$theight = (int) 3/4* $twidth;
	// Info
	if ($showthumb) $iwidth = $pwidth - $twidth; else $iwidth = $pwidth;
	
	?>
	<script type="text/javascript">
	//<![CDATA[
		var trwidth = "<?php echo $pwidth; ?>";
		var vidtdwidth = "<?php echo $iwidth; ?>";
		var tdwidth = "<?php echo $twidth; ?>";
		var tdheight = "<?php echo $theight; ?>";
		var callbackInit = "<?php echo PTP_URLPATH.'myextractXML.php?id='.$default; ?>";
		var showthumb = "<?php echo $showthumb; ?>";
	//]]>
	</script>
	<?php

	$body = "\n\t".'<div id="playlist">';
	$body .= "\n\t\t".'<form style="width: '.$fwidth.'px" id="theForm" name="theForm1" action="">';
	$body .= "\n\t\t\t".'<select id="theSelect" name="sel1" onchange="javascript:loadXMLDoc(this.value);">';
	$body .= "\n\t\t\t\t".'<option value="'.PTP_URLPATH.'/myextractXML.php?id=0&tw='.$twidth.'" '.getSelectedDefault($default, '0').'>'.__('All medias', 'posttube').'</option>'; 
	$body .= "\n\t\t\t\t".'<option value="'.PTP_URLPATH.'/myextractXML.php?id=video&tw='.$twidth.'" '.getSelectedDefault($default, 'video').'>'.__('All videos', 'posttube').'</option>'; 
	$body .= "\n\t\t\t\t".'<option value="'.PTP_URLPATH.'/myextractXML.php?id=music&tw='.$twidth.'" '.getSelectedDefault($default, 'music').'>'.__('All mp3', 'posttube').'</option>'; 
	$body .= "\n\t\t\t\t".'<option value="'.PTP_URLPATH.'/myextractXML.php?id=most&tw='.$twidth.'" '.getSelectedDefault($default, 'most').'>'.__('Top 10', 'posttube').'</option>'; 
	$results = get_Playlists();
	foreach ($results as $result) :
		$body .= "\n\t\t\t\t".'<option value="'.PTP_URLPATH.'/myextractXML.php?id='.$result->pid.'&tw='.$twidth.'" '.getSelectedDefault($default, $result->pid).'>'.$result->playlist_name.'</option>';
	endforeach;
	$body .= "\n\t\t\t".'</select>';
	$body .= "\n\t\t".'</form>';

	$body .= "\n\t\t".'<div id="playlistbox" style="width: '.$pwidth.'px;height: '.$pheight.'px;" >';
	$body .= "\n\t\t\t\t".'<div id="writeroot"></div>';
	$body .= "\n\t\t".'</div>';
	$body .= "\n\t".'</div>';
	
	return $body;
	
}
if (class_exists('pt_highslide')) {
	/***************************************************************
		Get the popup player
		vwidth	: media width
		pwidth	: playlist width
		twidth	: thumbnail width
		title	: title to display below the icon
		echo	: echo or return the result
		default	: choose playlist to display first
		showthumb : display thumbnail or not
	***************************************************************/
	function get_thePopupPlayer($vwidth=560, $pwidth=322, $twidth=90, $title='wordtube', $echo=true, $default='0', $showthumb=true) {
	
		$body = set_thePopupBody($vwidth, $pwidth, $twidth, $default, $showthumb);
		$puwidth = $vwidth+$pwidth+25;
		$puheight = (int) $vwidth * 3/4 + 10;
	
		$echo_str = set_thePopup($body, PTP_THUMB, $title, $puwidth, $puheight);
		$echo_str['href'] = "\n".'<div id="winicon1" class="jqDnR" >'.$echo_str['href'].'<span class="rubtitle">'.$title.'</span></div>';
		$echo_str['href'] .= "\n".'<div class="clear"></div>';
		$echo_str['div'] .= "\n".'<div class="clear"></div>';
		
		if ($echo) {
			echo $echo_str['href'];
			echo $echo_str['div'];
		} else {
			return $echo_str;
		}
	}
	/***************************************************************
		popup utility routine
	***************************************************************/
	function set_thePopupBody($vwidth=560, $pwidth=322, $twidth=90, $default='0', $showthumb=true) {
	
		// Video
		$vheight = (int) 3/4*$vwidth;
		
		// Playlist
		$pheight = $vheight - 27;
	
		// Content
		$cwidth = $vwidth+$pwidth+23;
		$cheight = $vheight+10;
	
		$body = "\n\t".'<div id="allcontent">';
		$body .= get_theMedia($vwidth, $vheight);
		$body .= get_thePlaylist($pwidth, $pheight, $twidth, $default, $showthumb);
		$body .= "\n\t".'</div>'."\n";
		
		return $body;
	}
	/***************************************************************
		popup utility routine
	***************************************************************/
	function set_thePopup($body, $thumb, $label, $width=915, $height=440) {
	
		$ID = 'zerty123';
		$IconDiv = 'Icondiv'.$ID;
		$echo_str = array(); 
	
		$h = new pt_highslide('#', $thumb, $label);
		$h->set_wrapClass('contentvideo');
		$h->align = $h->align3;
		$hrefID = $h->hrefID;
		$h->set_borders (get_pt_options('ovframe'));
		$h->set_title ($label);
		$h->set_href_text($label);
		$h->set_size($width, $height, 0);
		$h->set_body ($body);
		$h->set_bottom ('');
	
		$echo_str['href'] = $h->highslide_link("html");
		$echo_str['div'] = $h->html_div("html");
		$echo_str['div'] = str_replace('class="highslide-body"', 'class="highslide-body" id="'.$IconDiv.'"', $echo_str['div']);
		unset($h);
	
		return $echo_str;
	}
}
/***************************************************************
/* Get the player
***************************************************************/
function getSelectedDefault($default, $value) {
	if ($default == $value) return 'selected="selected"';
}
/***************************************************************
/* Retrieves WT playlists
***************************************************************/
function get_Playlists() {
	global $wpdb;
	return $wpdb->get_results('SELECT * FROM '.$wpdb->wordtube_playlist);
}
/***************************************************************
/* Retrieves WT playlists
***************************************************************/
function get_LastMedia() {
	global $wpdb;
	return $wpdb->get_results('SELECT * FROM '.$wpdb->wordtube.' ORDER BY vid DESC LIMIT 1');
}
/****************************************************************/
/* Loads language file at init
/****************************************************************/
function posttube_init () {

	// Load language file
	$locale = get_locale();
	if ( !empty($locale) )
		load_textdomain('posttube', PTP_ABSPATH.'languages/' . 'posttube'.$locale.'.mo');
}
add_action('init', 'posttube_init', 15);

?>
